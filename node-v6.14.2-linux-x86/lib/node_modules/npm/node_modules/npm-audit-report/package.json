{
  "_from": "npm-audit-report@latest",
  "_id": "npm-audit-report@1.0.5",
  "_inBundle": false,
  "_integrity": "sha512-xOnLCYj1wk6W5AxwPaHbvChrnVo2KYLEEZMoP3tvuK1fE13NhJa1TVxWj4Tl35+hjC6rQgaEKBWsSatbf2BXLQ==",
  "_location": "/npm/npm-audit-report",
  "_phantomChildren": {},
  "_requested": {
    "type": "tag",
    "registry": true,
    "raw": "npm-audit-report@latest",
    "name": "npm-audit-report",
    "escapedName": "npm-audit-report",
    "rawSpec": "latest",
    "saveSpec": null,
    "fetchSpec": "latest"
  },
  "_requiredBy": [
    "/npm"
  ],
  "_resolved": "https://registry.npmjs.org/npm-audit-report/-/npm-audit-report-1.0.5.tgz",
  "_shasum": "f16fa7c61459dd660913509685193148ce2cd85f",
  "_shrinkwrap": null,
  "_spec": "npm-audit-report@latest",
  "_where": "/Users/rebecca/code/npm",
  "author": {
    "name": "Adam Baldwin"
  },
  "bundleDependencies": false,
  "dependencies": {
    "ansicolors": "^0.3.2",
    "ansistyles": "^0.1.3",
    "cli-table2": "^0.2.0"
  },
  "deprecated": false,
  "description": "Given a response from the npm security api, render it into a variety of security reports",
  "devDependencies": {
    "keyfob": "^1.0.0",
    "standard": "^11.0.0",
    "tap": "^11.1.1"
  },
  "keywords": [
    "npm",
    "security",
    "report",
    "audit"
  ],
  "license": "ISC",
  "main": "index.js",
  "name": "npm-audit-report",
  "optionalDependencies": {},
  "readme": "\n# npm audit security report\n\nGiven a response from the npm security api, render it into a variety of security reports\n\nThe response is an object that contains an output string (the report) and a suggested exitCode.\n```\n{\n  output: 'string that contains the security report',\n  exit: 1\n}\n```\n\n\n## Basic usage example\n\n```\n'use strict'\nconst Report = require('npm-audit-report')\n\nReport(response, options, (result) => {\n  console.log(result.output)\n  process.exitCode = result.exitCode\n})\n```\n\n\n## options\n\nreporter: \n  specify which output format you want to use (install, detail, json)\n\nseverityThreshold: \n  specifies the severity threshold for reporting. Possible values include info, low, moderate, high, critical\n\n  example: If you specify high, then only vulnerabilities with high and critical would be displayed.\n\nwithColor: \n  true || false indicates if some report elements should use colors or not\n\nwithUnicode: \n  true || false indicates if unicode characters should be used or not.\n\n\n\n\n\n",
  "readmeFilename": "README.md",
  "scripts": {
    "lint": "standard",
    "lint:fix": "standard --fix",
    "test": "tap --100 test/*-test.js"
  },
  "version": "1.0.5"
}
